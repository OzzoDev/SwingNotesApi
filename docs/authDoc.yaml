paths:
  api/user/signup:
    post:
      summary: User signup
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignupRequest"
      responses:
        "201":
          description: Successfully registered user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthSuccessResponse"
        "400":
          description: Validation error
        "409":
          description: Name or email already exists
        "500":
          description: Internal server error

  api/user/login:
    post:
      summary: User login
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: Successfully logged in
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthSuccessResponse"
        "400":
          description: Validation error
        "401":
          description: Incorrect password
        "404":
          description: User not found
        "500":
          description: Internal server error

components:
  schemas:
    SignupRequest:
      type: object
      required:
        - name
        - email
        - password
      properties:
        name:
          type: string
          example: John
        email:
          type: string
          format: email
          example: john123@a.com
        password:
          type: string
          example: secretPassword123

    LoginRequest:
      type: object
      required:
        - name
        - password
      properties:
        name:
          type: string
          example: John
        password:
          type: string
          example: secretPassword123

    AuthSuccessResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: integer
              example: 2
            name:
              type: string
              example: John
            email:
              type: string
              format: email
              example: john123@a.com
            createdAt:
              type: string
              format: date-time
              example: 2025-06-01T10:34:31.321Z
        token:
          type: string
          example: >-
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwibmFtZSI6MiwiZW1haWwiOiJqb2huMTIzQGEuY29tIiwiY3JlYXRlZEF0IjoiMjAyNS0wNi0wMVQxMDozNDozMS4zMjFaIiwiaWF0IjoxNzQ4NzgxOTMxLCJleHAiOjE3NDg4NjgzMzF9.fyEnPYI5RpDskn0dhdnnMvEZiib3Exe7bvx9R2eWE9
