paths:
  /api/notes:
    get:
      summary: Get all notes (with optional search)
      tags: [Notes]
      security:
        - bearerAuth: []
      parameters:
        - name: search
          in: query
          description: Search notes by title
          required: false
          schema:
            type: string
            example: "test"
      responses:
        "200":
          description: Notes fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Note"
        "401":
          description: Unauthorized
        "500":
          description: Internal server error

    post:
      summary: Create a new note
      tags: [Notes]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateNoteRequest"
      responses:
        "201":
          description: Note created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Note"
        "400":
          description: Validation error
        "401":
          description: Unauthorized
        "500":
          description: Internal server error

  /api/notes/{noteId}:
    put:
      summary: Update an existing note
      tags: [Notes]
      security:
        - bearerAuth: []
      parameters:
        - name: noteId
          in: path
          required: true
          schema:
            type: integer
            example: 4
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateNoteRequest"
      responses:
        "200":
          description: Note updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Note"
        "400":
          description: Validation error
        "401":
          description: Unauthorized
        "404":
          description: Note not found
        "500":
          description: Internal server error

    delete:
      summary: Delete a note
      tags: [Notes]
      security:
        - bearerAuth: []
      parameters:
        - name: noteId
          in: path
          required: true
          schema:
            type: integer
            example: 4
      responses:
        "200":
          description: Note deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Note"
        "401":
          description: Unauthorized
        "404":
          description: Note not found
        "500":
          description: Internal server error

components:
  schemas:
    CreateNoteRequest:
      type: object
      required:
        - title
        - text
      properties:
        title:
          type: string
          maxLength: 50
          example: Walk the dog
        text:
          type: string
          maxLength: 300
          example: Take a short walk with the dog during lunch

    UpdateNoteRequest:
      type: object
      properties:
        title:
          type: string
          maxLength: 50
          example: Grocery shopping
        text:
          type: string
          maxLength: 300
          example: Buy vegetables, fruits, and snacks

    Note:
      type: object
      properties:
        id:
          type: integer
          example: 4
        title:
          type: string
          example: test
        text:
          type: string
          example: test text
        created_at:
          type: string
          format: date-time
          example: 2025-06-01T10:18:31.757Z
        modified_at:
          type: string
          format: date-time
          example: 2025-06-01T10:18:31.757Z
        user:
          type: string
          example: John
